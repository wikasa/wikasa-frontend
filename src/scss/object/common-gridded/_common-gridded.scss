/** ------------------------------------------------------------------------- *\
 *  WIKASA.OBJECT.COMMON-GRIDDED
 *  
 *  A set of objects (placeholder) with predefined size.
 *  
 *  @author Bangsawan & Silvia
 *  
 *  @version 0.0.1
 *  Copyright 2014. Free licensed.
 ** ------------------------------------------------------------------------- */

$_items: 'alpha',
         'beta',
         'gamma',
         'delta',
         'epsilon',
         'zeta',
         'eta',
         'theta',
         'iota',
         'kappa',
         'lambda',
         'mu';

// for testing purpose only.
*[class^="column"] {
    // margin-bottom: 1em;
    height: 5em;
    background-color: #333;
}

// =========================================================================== \
// Local Mixin
// =========================================================================== /

@mixin _container-full() {
    @each $_item in $_items {
        & > .column-#{$_item},
        & > .column {
            @include column($total_columns);
            float: none;
            &:nth-child(n+2) { margin-top: 1em; }
        }
    }
}

@mixin _container-uni-n($_col_n: 2) {
    $j: 1;
    @each $_item in $_items {
        & > *[class^="column"] {
            @include column($total_columns / $_col_n);

            @while $j <= ($_col_n + 1) {
                @if $j <= $_col_n {
                    &:nth-child(#{$_col_n}n + #{$j}) { @include push($total_columns * ($j - 1) / $_col_n); }
                } @else {
                    &:nth-child(#{$_col_n}n + #{$j}) { clear: left; }
                }
                $j: $j + 1;
            }

            &:nth-child(n + #{$_col_n + 1}) { margin-top: 1em; }
        }
    }
}

/** ------------------------------------------------------------------------- *\
 *  Predefined Container Objects
 ** ------------------------------------------------------------------------- */

/* CONTAINER FULL ----------------------------------------------------------- */

.container-full {
    @include media-query($mobile) {
        $total_columns: 3;
        $total_width: 20em; // 20 * 16px = 320px
        @include _container-full;
    }

    @include media-query($tablet) {
        $total_columns: 6;
        $total_width: 38em; // 38 * 16px = 608px
        @include _container-full;
    }

    @include media-query($desktop) {
        $total_columns: 12;
        $total_width: 59em; // 59 * 16px = 944px
        @include _container-full;
    }

    @include media-query($wide) {
        $total_columns: 12;
        $total_width: 71em; // 71 * 16px = 1136px
        @include _container-full;
    }
}

/* CONTAINER UNI ------------------------------------------------------------ */

$_container-uni-types: 2 3 4 6 12;

*[class^="container-uni-"] {
    @include media-query($mobile) {
        $total_columns: 3;
        $total_width: 20em; // 16 * 20px = 320px
        @include _container-uni-n(3);
    }
}

@each $_type in $_container-uni-types {
    .container-uni-#{$_type} {
        @include media-query($tablet) {
            $total_columns: 6;
            $total_width: 38em; // 38 * 16px = 608px
            @if $_type <= $total_columns {
                @include _container-uni-n($_type);
            } @else {
                @include _container-uni-n($total_columns);
            }
        }

        @include media-query($desktop) {
            $total_columns: 12;
            $total_width: 59em; // 59 * 16px = 944px
            @if $_type <= $total_columns {
                @include _container-uni-n($_type);
            } @else {
                @include _container-uni-n($total_columns);
            }
        }

        @include media-query($wide) {
            $total_columns: 12;
            $total_width: 71em; // 71 * 16px = 944px
            @if $_type <= $total_columns {
                @include _container-uni-n($_type);
            } @else {
                @include _container-uni-n($total_columns);
            }
        }
    }
}
